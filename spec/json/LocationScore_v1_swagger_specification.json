{
  "openapi": "3.0.0",
  "info": {
    "title": "Location Score",
    "version": "1.0.1",
    "description": "Before using this API, we recommend you read our **[Authorization Guide](https://developers.amadeus.com/self-service/apis-docs/guides/authorization-262)** for more information on how to generate an access token. \n  \nPlease also be aware that our test environment is based on a subset of the production, this API in test only returns a few selected cities. You can find the list in our **[data collection](https://github.com/amadeus4dev/data-collection)**."
  },
  "servers": [
    {
      "url": "https://test.api.amadeus.com/v1"
    }
  ],
  "paths": {
    "/location/analytics/category-rated-areas": {
      "get": {
        "summary": "GET category rated areas",
        "responses": {
          "200": {
            "description": "Successful Reply",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "meta": {
                      "type": "object",
                      "description": "Meta information about the returned object(s) in \"data\"",
                      "title": "Meta",
                      "properties": {
                        "count": {
                          "type": "integer",
                          "format": "int64",
                          "description": "Total number of object(s) retrieved",
                          "minimum": 0,
                          "exclusiveMinimum": false
                        },
                        "links": {
                          "type": "object",
                          "title": "Links",
                          "description": "Links related to the returned object(s)",
                          "properties": {
                            "self": {
                              "type": "string",
                              "format": "url",
                              "description": "Link to the same page."
                            },
                            "first": {
                              "type": "string",
                              "format": "url",
                              "description": "Link to the first page."
                            },
                            "prev": {
                              "type": "string",
                              "format": "url",
                              "description": "Link to the previous page."
                            },
                            "next": {
                              "type": "string",
                              "format": "url",
                              "description": "Link to the next page."
                            },
                            "last": {
                              "type": "string",
                              "format": "url",
                              "description": "Link to the last page."
                            }
                          }
                        }
                      }
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/category-rated-areas"
                      }
                    },
                    "warnings": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "The Warning Definition",
                        "title": "Warning",
                        "properties": {
                          "code": {
                            "type": "integer",
                            "description": "A machine-readable error code from the Canned Messages table, that will enable the API Consumers code to handle this type of error"
                          },
                          "title": {
                            "type": "string",
                            "description": "An error title from the Canned Messages table with a 1:1 correspondence to the error code. This may be localized"
                          },
                          "detail": {
                            "type": "string",
                            "description": "An easy-to-read explanation specific to this occurrence of the problem. It should give the API consumer an idea of what went wrong and how to recover from it. Like the title, this field’s value can be localized."
                          },
                          "source": {
                            "type": "object",
                            "description": "The Warning Source Definition",
                            "title": "Warning_Source",
                            "properties": {
                              "parameter": {
                                "type": "string",
                                "description": "The key of the URI path or query parameter that caused the error"
                              },
                              "pointer": {
                                "type": "string",
                                "description": "A JSON Pointer [RFC6901] to the associated entity in the request body that caused this error"
                              },
                              "example": {
                                "type": "string",
                                "description": "A sample input to guide the user when resolving this issue"
                              }
                            }
                          }
                        },
                        "required": [
                          "code",
                          "title"
                        ]
                      }
                    }
                  }
                },
                "examples": {
                  "Successful Reply": {
                    "value": {
                      "meta": {
                        "count": 3,
                        "links": {
                          "self": "https://test.api.amadeus.com/v1/location/analytics/category-rated-areas?latitude\u003d41.397158\u0026longitude\u003d2.160873"
                        }
                      },
                      "data": [
                        {
                          "type": "category-rated-area",
                          "geoCode": {
                            "longitude": 41.397158,
                            "latitude": 2.160873
                          },
                          "radius": 200,
                          "categoryScores": {
                            "sight": {
                              "overall": 90,
                              "historical": 86,
                              "beachAndPark": 0
                            },
                            "restaurant": {
                              "overall": 99,
                              "vegetarian": 82
                            },
                            "shopping": {
                              "overall": 99,
                              "luxury": 97
                            },
                            "nightLife": {
                              "overall": 93
                            }
                          }
                        },
                        {
                          "type": "category-rated-area",
                          "geoCode": {
                            "longitude": 41.397158,
                            "latitude": 2.160873
                          },
                          "radius": 500,
                          "categoryScores": {
                            "sight": {
                              "overall": 99,
                              "historical": 89,
                              "beachAndPark": 0
                            },
                            "restaurant": {
                              "overall": 99,
                              "vegetarian": 92
                            },
                            "shopping": {
                              "overall": 99,
                              "luxury": 99
                            },
                            "nightLife": {
                              "overall": 96
                            }
                          }
                        },
                        {
                          "type": "category-rated-area",
                          "geoCode": {
                            "longitude": 41.397158,
                            "latitude": 2.160873
                          },
                          "radius": 1500,
                          "categoryScores": {
                            "sight": {
                              "overall": 99,
                              "historical": 99,
                              "beachAndPark": 58
                            },
                            "restaurant": {
                              "overall": 99,
                              "vegetarian": 99
                            },
                            "shopping": {
                              "overall": 99,
                              "luxury": 99
                            },
                            "nightLife": {
                              "overall": 99
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "code    | title                                 \n------- | ------------------------------------- \n477     | INVALID FORMAT\n572     | INVALID OPTION                            \n32171   | MANDATORY DATA MISSING ",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "description": "The Error Definition",
                        "title": "Error",
                        "properties": {
                          "status": {
                            "type": "integer",
                            "description": "The [HTTP status code](https://www.iana.org/assignments/http-status-codes/http-status-codes.xhtml) of this response. This is present only in terminal errors which cause an unsuccessful response. In the case of multiple errors, they must all have the same status."
                          },
                          "code": {
                            "type": "integer",
                            "description": "A machine-readable error code from the Amadeus Canned Messages table, that will enable the API Consumers code to handle this type of error"
                          },
                          "title": {
                            "type": "string",
                            "description": "An error title from the Canned Messages table with a 1:1 correspondence to the error code. This may be localized"
                          },
                          "detail": {
                            "type": "string",
                            "description": "An easy-to-read explanation specific to this occurrence of the problem. It should give the API consumer an idea of what went wrong and how to recover from it. Like the title, this field’s value can be localized."
                          },
                          "source": {
                            "type": "object",
                            "title": "Error_Source",
                            "properties": {
                              "parameter": {
                                "type": "string",
                                "description": "The key of the URI path or query parameter that caused the error"
                              },
                              "pointer": {
                                "type": "string",
                                "description": "A JSON Pointer [RFC6901] to the associated entity in the request body that caused this error"
                              },
                              "example": {
                                "type": "string",
                                "description": "A sample input to guide the user when resolving this issue"
                              }
                            }
                          }
                        },
                        "required": [
                          "status",
                          "code",
                          "title"
                        ]
                      }
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "errors": [
                        {
                          "status": 400,
                          "code": 477,
                          "title": "INVALID FORMAT",
                          "detail": "invalid query parameter format",
                          "source": {
                            "parameter": "latitude",
                            "example": "41.397158"
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "errors": {
                      "type": "array",
                      "items": {
                        "$ref": "#/paths/~1location~1analytics~1category-rated-areas/get/responses/400/content/application~1json/schema/properties/errors/items"
                      }
                    }
                  }
                },
                "examples": {
                  "example": {
                    "value": {
                      "errors": [
                        {
                          "status": 500,
                          "code": 141,
                          "title": "SYSTEM ERROR HAS OCCURRED"
                        }
                      ]
                    }
                  }
                }
              }
            }
          }
        },
        "operationId": "get-category-rated-areas",
        "description": "",
        "parameters": [
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "latitude",
            "required": true,
            "description": "Latitude in decimal coordinates",
            "example": 41.397158
          },
          {
            "schema": {
              "type": "number"
            },
            "in": "query",
            "name": "longitude",
            "required": true,
            "description": "Longitude in decimal coordinates",
            "example": 2.160873
          }
        ],
        "tags": [
          "category-rated-areas"
        ]
      },
      "parameters": []
    }
  },
  "components": {
    "schemas": {
      "category-rated-areas": {
        "title": "scored-locations",
        "description": "",
        "allOf": [
          {
            "type": "object",
            "properties": {
              "geoCode": {
                "type": "object",
                "description": "Geographic coordinates describing the position of any location on the surface of Earth",
                "title": "GeoCode",
                "properties": {
                  "latitude": {
                    "type": "number",
                    "format": "float",
                    "description": "Latitude of the position expressed in decimal degrees (WSG 84), e.g. 6.244203. A positive value denotes northern hemisphere or the equator, and a negative value denotes southern hemisphere. The number of digits to represent the precision of the coordinate.",
                    "minimum": -90,
                    "exclusiveMinimum": false,
                    "maximum": 90,
                    "exclusiveMaximum": false,
                    "example": 48.85837
                  },
                  "longitude": {
                    "type": "number",
                    "format": "float",
                    "description": "Longitude of the position expressed in decimal degrees (WSG 84), e.g. -75.581211. A positive value denotes east longitude or the prime meridian, and a negative value denotes west longitude.  The number of digits to represent the precision of the coordinate.",
                    "minimum": -180,
                    "exclusiveMinimum": false,
                    "maximum": 180,
                    "exclusiveMaximum": false,
                    "example": 2.294481
                  }
                }
              },
              "radius": {
                "type": "integer",
                "description": "Radius of the area in meters"
              },
              "categoryScores": {
                "type": "object",
                "description": "category scoring of the location",
                "properties": {
                  "sight": {
                    "type": "object",
                    "description": "sight category",
                    "properties": {
                      "overall": {
                        "type": "integer",
                        "description": "score of sight seeing possibility from 0 (nothing to see) to 100 (many sceneries to enjoy)"
                      },
                      "historical": {
                        "type": "integer",
                        "description": "score of historical discovery possibility from 0 (no historical site) to 100 (many historical site to enjoy)"
                      },
                      "beachAndPark": {
                        "type": "integer",
                        "description": "score of outdoor activity possibility from 0 (no outdoor spaces) to 100 (many parks or beaches to enjoy)"
                      }
                    }
                  },
                  "restaurant": {
                    "type": "object",
                    "description": "restaurant category",
                    "properties": {
                      "overall": {
                        "type": "number",
                        "description": "score of eating possibility from 0 (no place to eat) to 100 (many restaurants to enjoy)"
                      },
                      "vegetarian": {
                        "type": "number",
                        "description": "score of vegetatian eating possibility from 0 (no place to eat vegetatian) to 100 (many restaurants to enjoy)"
                      }
                    }
                  },
                  "shopping": {
                    "type": "object",
                    "description": "shopping category",
                    "properties": {
                      "overall": {
                        "type": "number",
                        "description": "score of shopping possibility from 0 (no shop) to 100 (many shops to enjoy)"
                      },
                      "luxury": {
                        "type": "number",
                        "description": "score of luxury shopping possibility from 0 (no luxury shop) to 100 (many luxury shops to enjoy)"
                      }
                    }
                  },
                  "nightLife": {
                    "type": "object",
                    "description": "night life category",
                    "properties": {
                      "overall": {
                        "type": "number",
                        "description": "score of nigh life possibility from 0 (nothing to do at night) to 100 (many night activities to enjoy)"
                      }
                    }
                  }
                }
              }
            }
          },
          {
            "title": "Abstract Resource",
            "type": "object",
            "description": "Identification of a specific version of a resource  ",
            "properties": {
              "type": {
                "type": "string",
                "description": "Type of the manipulatd resource",
                "example": "PNR"
              }
            }
          }
        ]
      }
    }
  }
}